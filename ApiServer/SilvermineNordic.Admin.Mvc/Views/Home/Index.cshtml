@* @{
ViewData["Title"] = "Home Page";
}

<div class="text-center">
<h1 class="display-4">Welcome</h1>
<p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div> *@

@using SilvermineNordic.Admin.Mvc.Services;
@using SilvermineNordic.Admin.Mvc.Models;
@model IndexModel

<div class="container">
    <h1 class="title">Silvermine Nordic<br />Snow Making</h1>
    <div class="grid">
        <h3 class="cardwithoutborder">
            <button class="button">Refresh</button>
        </h3>
    </div>
    <div class="grid">
        <h3 class="card">Last Sensor</h3>
        <h3 class="card">Last Weather</h3>
        <h3 class="card">In The Zone</h3>
        <h3 class="card">Zone Forecast</h3>
    </div>
    <div class="grid">
        <div class="tablecard">
            <h3 class="description">Weather Reading</h3>
            <table class="table">
                <thead>
                    <tr>
                        <th>DateTime</th>
                        <th>Temperature</th>
                        <th>Humidity</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var weatherReadings = await Model.WeatherReadingsTask;
                    }
                    @foreach (var wr in weatherReadings)
                    {
                        <tr key="0">
                            <td>@wr.ReadingDateTimestampUtc.ConvertUtcToTimezone("Central Standard Time")</td>
                            <td>@wr.TemperatureInCelcius.ConvertCelciusToFahrenheit()</td>
                            <td>@wr.Humidity.RoundToOneDecimal()</td>
                        </tr>
                    }
                    @if (!weatherReadings.Any())
                    {
                        <tr>
                            <td colSpan="4">No data available</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="tablecard">
            <h3 class="description">Sensor Readings</h3>
            <table class="table">
                <thead>
                    <tr>
                        <th>DateTime</th>
                        <th>Temperature</th>
                        <th>Humidity</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var sensorReadings = await Model.SensorReadingsTask;
                    }
                    @foreach (var sr in sensorReadings)
                    {
                        <tr key="0">
                            <td>@sr.ReadingDateTimestampUtc.ConvertUtcToTimezone("Central Standard Time")</td>
                            <td>@sr.TemperatureInCelcius.ConvertCelciusToFahrenheit()</td>
                            <td>@sr.Humidity.RoundToOneDecimal()</td>
                        </tr>
                    }
                    @if (!sensorReadings.Any())
                    {
                        <tr>
                            <td colSpan="3">No data available</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="tablecard">
            <h3 class="description">Weather Forecast</h3>
            <table class="table">
                <thead>
                    <tr>
                        <th>DateTime</th>
                        <th>Temperature</th>
                        <th>Humidity</th>
                        <th>SnowfallInCm</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var weatherForecasts = await Model.WeatherForecastTask;
                    }
                    @foreach (var wf in weatherForecasts)
                    {
                        <tr key="0">
                            <td>@wf.DateTimeUtc.ConvertUtcToTimezone("Central Standard Time")</td>
                            <td>@wf.TemperatureInCelcius.ConvertCelciusToFahrenheit().RoundToOneDecimal()</td>
                            <td>@wf.Humidity.RoundToOneDecimal()</td>
                            <td>@wf.SnowfallInCm</td>
                        </tr>
                    }
                    @if (!weatherForecasts.Any())
                    {
                        <tr>
                            <td colSpan="4">No data available</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="tablecard">
            <h3 class="description">Thresholds</h3>
            <table class="table">
                <thead>
                    <tr>
                        <th>Temperature Low</th>
                        <th>Temperature High</th>
                        <th>Humidity Low</th>
                        <th>Humidity High</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var thresholds = await Model.ThresholdsTask;
                    }
                    @foreach (var t in thresholds)
                    {
                        <tr key="0">
                            <td>@t.TemperatureInCelciusLowThreshold.ConvertCelciusToFahrenheit()</td>
                            <td>@t.TemperatureInCelciusHighThreshold.ConvertCelciusToFahrenheit()</td>
                            <td>@t.HumidityLowThreshold.RoundToOneDecimal()</td>
                            <td>@t.HumidityHighThreshold.RoundToOneDecimal()</td>
                        </tr>
                    }
                    @if (!thresholds.Any())
                    {
                        <tr>
                            <td colSpan="4">No data available</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
